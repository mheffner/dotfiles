#
#
# Functions for AWS related tasks.
#

#
# Grab the hostname for all nodes matching a given
# tag. Looks for all tagged instances where any part
# of the tag matches 'tag-name'.
#
function aws_nodes_for_tag()
{
        if [ $# -ne 1 ]; then
           echo "Usage: aws_nodes_for_tag tag-name"
           return 1
        fi

        NAME="$1"

	ec2dtag -F resource-type=instance | grep "$NAME" | awk '{print $3}' | \
		sort | uniq | \
		xargs -n 10 ec2din | egrep '^INSTANCE' | awk '{print $4}'
}

#
# Takes a list of instance IDs and returns their hostnames.
#
function aws_nodes_for_ids()
{

	if [ $# -lt 1 ]; then
	   echo "Usage: aws_nodes_for_ids id1 [id2 id3 ...]"
           return 1
        fi

	echo "$@" | xargs -n 10 ec2din | egrep '^INSTANCE' | awk '{print $4}'
}

#
# Converts the command:
#
#     assh ubuntu@web-prod
#
# Into the assh command that logs into an instance tagged
# 'web-prod'. Username is optional. The instance is selected as the
# first one returned from the ec2dtag command.
#
function aws_assh_tag()
{
	if [ $# -lt 1 ]; then
	   echo "Usage: aws_assh_tag [user@]<tag-name>"
           return 1
	fi

	local ARG="$1"
	local TAG=`echo $ARG | sed -e 's/^[^@]*@//'`
	local U=${AWS_DEFAULT_USER}

	if `echo $ARG | grep @ > /dev/null`; then
		U=`echo $ARG | sed -e 's/@.*$//'`
	fi

	INST=`ec2dtag -F resource-type=instance | grep $TAG | head -n 1 | awk '{print $3}'`

	if [ -z "$INST" ]; then
		echo "ERROR: Can't find an instance matching: $TAG"
		return 1
	fi

	if [ -n "$U" ]; then
		assh "$U@$INST"
	else
		assh "$INST"
	fi
}

alias ec2din='aenv aws --output=text ec2 describe-instances'
alias ec2dtag='aenv aws --output=text ec2 describe-tags'
alias ec2stop='aenv aws ec2 stop-instances --instance-ids'
alias ec2start='aenv aws ec2 start-instances --instance-ids'
alias ec2kill='aenv aws ec2 terminate-instances --instance-ids'

# Local Variables:
# mode: sh
# End:
